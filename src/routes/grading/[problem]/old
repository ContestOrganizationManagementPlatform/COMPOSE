<script lang="ts">
	import Motion from "svelte-motion/src/motion/MotionSSR.svelte";
	import { onMount } from "svelte";
	import { page } from "$app/stores";
	import Button from "$lib/components/Button.svelte";
	import SwipeCard from '$lib/components/SwipeCard.svelte';

	let answer = 5;
	let test = "test";
	let round = "team round";
	let currentCardIndex = 0;

	let area;
	let cards = [
		{ image: "/gradingImage.png" },
		{ image: "/logo.png" },
		{ image: "/gradingImage.png" },
		{ image: "/gradingImage.png" },
		{ image: "/logo.png" },
		{ image: "/gradingImage.png" },
		{ image: "/gradingImage.png" },
		{ image: "/logo.png" },
		{ image: "/gradingImage.png" },
		{ image: "/gradingImage.png" },
		{ image: "/logo.png" },
		{ image: "/gradingImage.png" },
	];

	// Handle swipe actions
	function handleAction(action: string) {
		if (action === "correct") {
			alert("Correct!");
		} else if (action === "incorrect") {
			alert("Incorrect!");
		} else if (action === "unsure") {
			alert("Unsure!");
		} else if (action == "return") {
			alert("Return prev ans");
		}

		// Move to the next card
		currentCardIndex++;
	}

	onMount(() => {
		// Load initial card data
	});
</script>
<SwipeCard />

<div>
	<h1>Grade {test}</h1>
	<div class="flex">
		<div class="sideBySide">
			<p>{round}</p>
			<p style="margin-left: 20px">Problem #{$page.params.problem}</p>
		</div>
	</div>
	<br />
	<h2>{answer}</h2>
	<br />
	<Button title="Go Back" href="/grading" />
	<br /><br />
	<div class="picture" bind:this={area}>
		{#if cards[currentCardIndex]}
			<Motion drag dragConstraints={{ current: area }} let:motion>
				<div class="box unselectable flex" use:motion><img src={cards[currentCardIndex].image} alt="Grading" /></div>
			</Motion>
		{:else}
			<p>No more problems</p>
		{/if}
	</div>
	<br />
	<div class="flex">
		<button
			style="background-color: var(--return); color: var(--return-text);"
			on:click={() => handleAction("return")}>↩</button
		>
		<button
			style="background-color: var(--incorrect); color: var(--incorrect-text);"
			on:click={() => handleAction("incorrect")}>X</button
		>
		<button
			style="background-color: var(--unsure); color: var(--unsure-text);"
			on:click={() => handleAction("unsure")}>?</button
		>
		<button
			style="background-color: var(--correct); color: var(--correct-text);"
			on:click={() => handleAction("incorrect")}>✔</button
		>
	</div>
	<br />
</div>

<style>
	h1 {
		margin-bottom: 5px;
	}

	.sideBySide {
		display: flex;
	}

	.picture {
		background-color: var(--primary-tint);
		min-width: 300px;
		max-width: 600px;
		height: 200px;
		width: 80%;
		margin: auto;
		padding: 10px;
		border: 5px solid var(--primary-dark);
		border-radius: 15px;
	}

	.box {
		width: 400px;
		height: 150px;
		position: absolute;
		top: calc(50% - 150px / 2);
		left: calc(50% - 150px / 2);
	}

	img {
		width: 80%;
		max-height: 100%;
	}

	button {
		width: 90px;
		height: 40px;
		border: 2px solid black;
		margin: 10px;
		font-size: 22px;
		border-radius: 10px;
		font-weight: bold;
	}

	button:hover {
		cursor: pointer;
	}

	.unselectable {
		-webkit-touch-callout: none;
		-webkit-user-select: none;
		-khtml-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
	}
</style>